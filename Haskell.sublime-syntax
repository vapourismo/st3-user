%YAML 1.2
---
name: "Vapourismo - Haskell"
file_extensions: [hs, lhs]
scope: source.haskell
contexts:
  main:
    # Comments
    - match: "-- >"
      scope: comment
      push:
        - include: main

        - match: "\n"
          pop: true

    - match: "-- ="
      scope: comment
      push:
        - match: "[^\\n]+"
          scope: comment.section

        - match: "\\n"
          pop: true

    - match: "--"
      scope: comment
      push:
        - meta_scope: comment

        - match: "@((\\\\@|[^@\n])+)@"
          captures:
            1: comment.quote

        - match: "'(([A-Z][a-zA-Z0-9_]*\\.)*)([A-Z][a-zA-Z0-9_]*)'"
          captures:
            1: storage
            3: storage

        - match: "'(([A-Z][a-zA-Z0-9_]*\\.)*)([a-z_][a-zA-Z0-9_]*)'"
          captures:
            1: storage
            3: entity

        - match: "\"(([A-Z][a-zA-Z0-9_']*\\.)*)([A-Z][a-zA-Z0-9_']*)\""
          captures:
            1: storage
            3: storage

        - match: "\"(([A-Z][a-zA-Z0-9_']*\\.)*)([a-z_][a-zA-Z0-9_']*)\""
          captures:
            1: storage
            3: entity

        - match: "\n"
          pop: true

    - match: "{-#\\s*([a-zA-Z_][a-zA-Z0-9_]*)"
      captures:
        1: keyword
      scope: comment
      push:
        - match: "#-}"
          scope: comment
          pop: true

    - match: "{-"
      scope: comment
      push:
        - meta_scope: comment

        - match: "-}"
          pop: true

    # Operators
    - match: "[\\+\\-\\*/%!<>.$:=\\\\|&\\^@#\\?~]+"
      scope: keyword

    - match: "`([A-Z][a-zA-Z0-9_]*\\.)*([a-zA-Z_][a-zA-Z0-9_]*)`"
      scope: keyword

    # Keywords
    - match: "\\b(import|export|qualified|as|hiding|foreign|ccall|unsafe)\\b"
      scope: keyword

    - match: "\\b(module|instance|class|deriving|data|newtype|type|family)\\b"
      scope: keyword

    - match: "\\b(if|then|else|where|let|in|do|case|of|forall|default)\\b"
      scope: keyword

    # Entities
    - match: "^([a-z_][a-zA-Z0-9_']*)\\s*((::)|$)"
      captures:
        1: entity.name.function
        2: keyword

    # Type names and constructors
    - match: "\\b[A-Z][a-zA-Z0-9_']*\\b?"
      scope: storage

    # Identifiers
    - match: "\\b[a-z_][a-zA-Z0-9_']*"

    # Numbers
    - match: "0[xX][0-9a-fA-F]+|[0-9]+\\.[0-9]+([fF]?)|[0-9]+"
      scope: constant

    # Constants
    - match: "\\(\\)"
      scope: storage

    # Strings
    - match: "\""
      scope: string
      push:
        - meta_scope: string

        - include: escape_sequence

        - match: "\""
          pop: true

    - match: "'(\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|SUB|ESC|DEL|FS|GS|RS|US|SP|EN|BS|HT|LF|VT|FF|CR|SO|SI|[0abfnrtv\"&'\\\\])|.)'"
      scope: string

  escape_sequence:
    - match: "\\\\[0abfnrtv\"&'\\\\]"
      scope: constant

    - match: "\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|SUB|ESC|DEL|FS|GS|RS|US|SP|EN|BS|HT|LF|VT|FF|CR|SO|SI|.)"
      scope: constant
